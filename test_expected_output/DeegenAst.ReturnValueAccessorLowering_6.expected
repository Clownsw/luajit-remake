; ModuleID = 'extracted_ir'
source_filename = "/home/u/project/annotated/unit_test/return_value_accessor_api_lowering.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%0 = type { ptr addrspace(256), ptr, ptr, i32, i32 }
%1 = type { %2, i8, i8, i32, ptr, ptr }
%2 = type { i8, i8 }

@__deegen_interpreter_dispatch_table = external dso_local local_unnamed_addr constant [0 x ptr], align 8

; Function Attrs: nounwind
define dso_local ghccc void @__deegen_interpreter_op_test6_0_retcont_0(ptr %0, ptr nocapture readonly %1, ptr nocapture readnone %2, ptr nocapture readnone %3, i64 %4, ptr nocapture readonly %retStart, i64 %numRet, i64 %5, i64 %6, i64 %7, double %8, double %9, double %10, double %11, double %12, double %13) #0 {
  %15 = getelementptr %0, ptr %1, i64 -1, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !3
  %17 = getelementptr inbounds %0, ptr %16, i64 -1
  %18 = load ptr addrspace(256), ptr %17, align 8, !tbaa !9
  %.sroa.0.0.copyload6.i.i.i = load i32, ptr addrspace(256) %18, align 4, !tbaa !10
  %19 = zext i32 %.sroa.0.0.copyload6.i.i.i to i64
  %20 = load ptr, ptr addrspace(256) null, align 4294967296, !tbaa !11
  %21 = ptrtoint ptr %20 to i64
  %22 = add i64 %21, %19
  %23 = inttoptr i64 %22 to ptr
  %24 = getelementptr %0, ptr %1, i64 -1, i32 3
  %25 = load i32, ptr %24, align 8, !tbaa !12
  %26 = getelementptr inbounds %1, ptr %23, i64 0, i32 4
  %27 = load ptr, ptr %26, align 8, !tbaa !13
  %28 = zext i32 %25 to i64
  %29 = getelementptr inbounds i8, ptr %27, i64 %28
  %30 = tail call noundef ptr @_Z2d1v() #2
  %31 = load i64, ptr %retStart, align 8
  store i64 %31, ptr %30, align 8
  %32 = getelementptr inbounds i8, ptr %29, i64 2
  %33 = load i16, ptr %32, align 1
  %34 = zext i16 %33 to i64
  %35 = getelementptr inbounds [0 x ptr], ptr @__deegen_interpreter_dispatch_table, i64 0, i64 %34
  %36 = load ptr, ptr %35, align 8
  musttail call ghccc void %36(ptr %0, ptr %16, ptr nonnull %32, ptr %23, i64 %4, ptr undef, i64 undef, i64 undef, i64 undef, i64 %7, double undef, double undef, double undef, double undef, double undef, double undef) #2
  ret void
}

declare dso_local noundef ptr @_Z2d1v() local_unnamed_addr #1

attributes #0 = { nounwind "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+bmi,+cx8,+fsgsbase,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+bmi,+cx8,+fsgsbase,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nounwind }

!llvm.linker.options = !{}
!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2, !2, !2, !2, !2, !2, !2, !2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 2}
!2 = !{!"Ubuntu clang version 15.0.0-++20220905103059+4ba6a9c9f65b-1~exp1~20220905103153.49"}
!3 = !{!4, !5, i64 8}
!4 = !{!"_ZTS16StackFrameHeader", !5, i64 0, !5, i64 8, !5, i64 16, !8, i64 24, !8, i64 28}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!"int", !6, i64 0}
!9 = !{!4, !5, i64 0}
!10 = !{!6, !6, i64 0}
!11 = !{!5, !5, i64 0}
!12 = !{!4, !8, i64 24}
!13 = !{!14, !5, i64 8}
!14 = !{!"_ZTS14ExecutableCode", !15, i64 0, !6, i64 2, !18, i64 3, !8, i64 4, !5, i64 8, !5, i64 16}
!15 = !{!"_ZTS24SystemHeapGcObjectHeader", !16, i64 0, !17, i64 1}
!16 = !{!"_ZTS14HeapEntityType", !6, i64 0}
!17 = !{!"_ZTS11GcCellState", !6, i64 0}
!18 = !{!"bool", !6, i64 0}
