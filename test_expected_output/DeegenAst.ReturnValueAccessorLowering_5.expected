; ModuleID = 'extracted_ir'
source_filename = "/home/u/project/annotated/unit_test/return_value_accessor_api_lowering.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

@__deegen_interpreter_dispatch_table = external dso_local local_unnamed_addr constant [0 x ptr], align 8

; Function Attrs: nounwind
define dso_local ghccc void @__deegen_interpreter_op_test5_0_retcont_0(ptr %0, ptr nocapture readonly %1, ptr nocapture readnone %2, ptr nocapture readnone %3, i64 %4, ptr nocapture readonly %retStart, i64 %numRet, i64 %5, i64 %6, i64 %7, double %8, double %9, double %10, double %11, double %12, double %13) #0 {
  %15 = getelementptr i8, ptr %1, i64 -24
  %.val = load ptr, ptr %15, align 8, !tbaa !3
  %16 = getelementptr i8, ptr %.val, i64 -32
  %.val1 = load ptr addrspace(256), ptr %16, align 8, !tbaa !9
  %.val1.val = load i32, ptr addrspace(256) %.val1, align 4, !tbaa !10
  %17 = zext i32 %.val1.val to i64
  %18 = load ptr, ptr addrspace(256) null, align 4294967296, !tbaa !11
  %19 = ptrtoint ptr %18 to i64
  %20 = add i64 %19, %17
  %21 = inttoptr i64 %20 to ptr
  %22 = getelementptr i8, ptr %1, i64 -8
  %.val2 = load i32, ptr %22, align 8, !tbaa !12
  %23 = getelementptr i8, ptr %21, i64 8
  %.val3 = load ptr, ptr %23, align 8, !tbaa !13
  %24 = tail call noundef ptr @_Z2d1v() #4
  %25 = tail call noundef i64 @_Z2a1v() #4
  %26 = icmp ugt i64 %25, %numRet
  %27 = tail call i64 @llvm.umin.i64(i64 %numRet, i64 %25)
  %28 = shl i64 %27, 3
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %24, ptr align 8 %retStart, i64 %28, i1 false)
  br i1 %26, label %.lr.ph.i, label %__DeegenImpl_CommonSnippetLib_StoreFirstKReturnValuesPaddingNil.exit

.lr.ph.i:                                         ; preds = %.lr.ph.i, %14
  %.014.i = phi i64 [ %30, %.lr.ph.i ], [ %numRet, %14 ]
  %29 = getelementptr inbounds i64, ptr %24, i64 %.014.i
  store i64 %7, ptr %29, align 8, !tbaa !19
  %30 = add nuw i64 %.014.i, 1
  %exitcond.not.i = icmp eq i64 %30, %25
  br i1 %exitcond.not.i, label %__DeegenImpl_CommonSnippetLib_StoreFirstKReturnValuesPaddingNil.exit, label %.lr.ph.i, !llvm.loop !21

__DeegenImpl_CommonSnippetLib_StoreFirstKReturnValuesPaddingNil.exit: ; preds = %.lr.ph.i, %14
  %31 = zext i32 %.val2 to i64
  %32 = getelementptr inbounds i8, ptr %.val3, i64 %31
  %33 = getelementptr inbounds i8, ptr %32, i64 2
  %34 = load i16, ptr %33, align 1
  %35 = zext i16 %34 to i64
  %36 = getelementptr inbounds [0 x ptr], ptr @__deegen_interpreter_dispatch_table, i64 0, i64 %35
  %37 = load ptr, ptr %36, align 8
  musttail call ghccc void %37(ptr %0, ptr %.val, ptr nonnull %33, ptr %21, i64 %4, ptr undef, i64 undef, i64 undef, i64 undef, i64 %7, double undef, double undef, double undef, double undef, double undef, double undef) #4
  ret void
}

declare dso_local noundef ptr @_Z2d1v() local_unnamed_addr #1

declare dso_local noundef i64 @_Z2a1v() local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umin.i64(i64, i64) #2

; Function Attrs: argmemonly mustprogress nocallback nofree nounwind willreturn
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #3

attributes #0 = { nounwind "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+bmi,+cx8,+fsgsbase,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+bmi,+cx8,+fsgsbase,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly mustprogress nocallback nofree nounwind willreturn }
attributes #4 = { nounwind }

!llvm.linker.options = !{}
!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2, !2, !2, !2, !2, !2, !2, !2, !2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 2}
!2 = !{!"Ubuntu clang version 15.0.0-++20220905103059+4ba6a9c9f65b-1~exp1~20220905103153.49"}
!3 = !{!4, !5, i64 8}
!4 = !{!"_ZTS16StackFrameHeader", !5, i64 0, !5, i64 8, !5, i64 16, !8, i64 24, !8, i64 28}
!5 = !{!"any pointer", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!"int", !6, i64 0}
!9 = !{!4, !5, i64 0}
!10 = !{!6, !6, i64 0}
!11 = !{!5, !5, i64 0}
!12 = !{!4, !8, i64 24}
!13 = !{!14, !5, i64 8}
!14 = !{!"_ZTS14ExecutableCode", !15, i64 0, !6, i64 2, !18, i64 3, !8, i64 4, !5, i64 8, !5, i64 16}
!15 = !{!"_ZTS24SystemHeapGcObjectHeader", !16, i64 0, !17, i64 1}
!16 = !{!"_ZTS14HeapEntityType", !6, i64 0}
!17 = !{!"_ZTS11GcCellState", !6, i64 0}
!18 = !{!"bool", !6, i64 0}
!19 = !{!20, !20, i64 0}
!20 = !{!"long", !6, i64 0}
!21 = distinct !{!21, !22, !23, !24}
!22 = !{!"llvm.loop.mustprogress"}
!23 = !{!"llvm.loop.unroll.disable"}
!24 = !{!"llvm.loop.vectorize.width", i32 1}
