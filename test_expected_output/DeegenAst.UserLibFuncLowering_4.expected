; ModuleID = 'extracted_ir'
source_filename = "/home/u/project/annotated/unit_test/user_lib_func_api.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.StackFrameHeader = type { ptr addrspace(256), ptr, ptr, %struct.SystemHeapPointer, i32 }
%struct.SystemHeapPointer = type { i32 }

; Function Attrs: nounwind
define dso_local ghccc void @DeegenInternal_UserLibFunctionTrueEntryPoint_testfn4(ptr %0, ptr %1, ptr %2, ptr nocapture readnone %3, i64 %4, ptr nocapture readnone %5, i64 %6, i64 %7, i64 %8, i64 %9, double %10, double %11, double %12, double %13, double %14, double %15) local_unnamed_addr #0 {
  %17 = ptrtoint ptr %2 to i64
  %18 = icmp ult ptr %2, inttoptr (i64 3 to ptr)
  br i1 %18, label %.lr.ph.i, label %__DeegenImpl_CommonSnippetLib_PopulateNilForReturnValues.exit

.lr.ph.i:                                         ; preds = %.lr.ph.i, %16
  %.04.reg2mem.i.0 = phi i64 [ %20, %.lr.ph.i ], [ %17, %16 ]
  %19 = getelementptr inbounds i64, ptr %1, i64 %.04.reg2mem.i.0
  store i64 %9, ptr %19, align 8, !tbaa !2
  %20 = add i64 %.04.reg2mem.i.0, 1
  %exitcond.not.i = icmp eq i64 %20, 3
  br i1 %exitcond.not.i, label %__DeegenImpl_CommonSnippetLib_PopulateNilForReturnValues.exit, label %.lr.ph.i, !llvm.loop !6

__DeegenImpl_CommonSnippetLib_PopulateNilForReturnValues.exit: ; preds = %.lr.ph.i, %16
  %21 = getelementptr %class.StackFrameHeader, ptr %1, i64 -1, i32 2
  %22 = load ptr, ptr %21, align 8, !tbaa !8
  musttail call ghccc void %22(ptr %0, ptr %1, ptr undef, ptr undef, i64 %4, ptr %1, i64 %17, i64 undef, i64 undef, i64 %9, double undef, double undef, double undef, double undef, double undef, double undef) #1
  ret void
}

attributes #0 = { nounwind "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+bmi,+cx8,+fsgsbase,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind }

!llvm.linker.options = !{}
!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 2}
!2 = !{!3, !3, i64 0}
!3 = !{!"long", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C++ TBAA"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.mustprogress"}
!8 = !{!9, !10, i64 16}
!9 = !{!"_ZTS16StackFrameHeader", !10, i64 0, !10, i64 8, !10, i64 16, !11, i64 24, !12, i64 28}
!10 = !{!"any pointer", !4, i64 0}
!11 = !{!"_ZTS17SystemHeapPointerIhE", !12, i64 0}
!12 = !{!"int", !4, i64 0}
