; ModuleID = 'extracted_ir'
source_filename = "/home/u/project/annotated/unit_test/return_value_accessor_api_lowering.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%0 = type { ptr addrspace(256), ptr, ptr, i32, i32 }
%1 = type { %2, i8, i8, i32, ptr, ptr }
%2 = type { i8, i8 }

@__deegen_interpreter_dispatch_table = external dso_local local_unnamed_addr constant [0 x ptr], align 8

declare noundef i64 @_Z2a1v() local_unnamed_addr #0

; Function Attrs: nounwind
define void @__deegen_interpreter_op_test4_0_retcont_0(ptr %coroutineCtx, ptr %stackBase, ptr nocapture readonly %retStart, ptr %numRet, i64 %0) #1 {
  %2 = ptrtoint ptr %numRet to i64
  %3 = getelementptr inbounds %0, ptr %stackBase, i64 -1
  %4 = load ptr addrspace(256), ptr %3, align 8, !tbaa !5
  %.sroa.0.0.copyload6.i.i.i = load i32, ptr addrspace(256) %4, align 4, !tbaa !11
  %5 = zext i32 %.sroa.0.0.copyload6.i.i.i to i64
  %6 = load ptr, ptr addrspace(256) null, align 4294967296, !tbaa !12
  %7 = ptrtoint ptr %6 to i64
  %8 = add i64 %7, %5
  %9 = inttoptr i64 %8 to ptr
  %10 = getelementptr %0, ptr %stackBase, i64 -1, i32 3
  %11 = load i32, ptr %10, align 8, !tbaa !13
  %12 = getelementptr inbounds %1, ptr %9, i64 0, i32 4
  %13 = load ptr, ptr %12, align 8, !tbaa !14
  %14 = zext i32 %11 to i64
  %15 = getelementptr inbounds i8, ptr %13, i64 %14
  %16 = getelementptr inbounds i8, ptr %15, i64 2
  %17 = load i32, ptr %16, align 1
  %18 = tail call noundef i64 @_Z2a1v() #2
  %19 = icmp ult i64 %18, %2
  br i1 %19, label %20, label %__DeegenImpl_CommonSnippetLib_GetReturnValueAtSpecifiedOrdinal.exit

20:                                               ; preds = %1
  %21 = getelementptr inbounds i64, ptr %retStart, i64 %18
  %22 = load i64, ptr %21, align 8, !tbaa !20
  br label %__DeegenImpl_CommonSnippetLib_GetReturnValueAtSpecifiedOrdinal.exit

__DeegenImpl_CommonSnippetLib_GetReturnValueAtSpecifiedOrdinal.exit: ; preds = %20, %1
  %.0.i = phi i64 [ %22, %20 ], [ -844429225099137, %1 ]
  %outputSlot = zext i32 %17 to i64
  %23 = getelementptr inbounds i64, ptr %stackBase, i64 %outputSlot
  store i64 %.0.i, ptr %23, align 8
  %24 = getelementptr inbounds i8, ptr %15, i64 6
  %25 = load i16, ptr %24, align 1
  %26 = zext i16 %25 to i64
  %27 = getelementptr inbounds [0 x ptr], ptr @__deegen_interpreter_dispatch_table, i64 0, i64 %26
  %28 = load ptr, ptr %27, align 8
  musttail call void %28(ptr %coroutineCtx, ptr nonnull %stackBase, ptr nonnull %24, ptr nonnull %9, i64 undef) #2
  ret void
}

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fsgsbase,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fsgsbase,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nounwind }

!llvm.linker.options = !{}
!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4, !4, !4, !4, !4, !4, !4, !4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"Ubuntu clang version 15.0.0-++20220905103059+4ba6a9c9f65b-1~exp1~20220905103153.49"}
!5 = !{!6, !7, i64 0}
!6 = !{!"_ZTS16StackFrameHeader", !7, i64 0, !7, i64 8, !7, i64 16, !10, i64 24, !10, i64 28}
!7 = !{!"any pointer", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C++ TBAA"}
!10 = !{!"int", !8, i64 0}
!11 = !{!8, !8, i64 0}
!12 = !{!7, !7, i64 0}
!13 = !{!6, !10, i64 24}
!14 = !{!15, !7, i64 8}
!15 = !{!"_ZTS14ExecutableCode", !16, i64 0, !8, i64 2, !19, i64 3, !10, i64 4, !7, i64 8, !7, i64 16}
!16 = !{!"_ZTS24SystemHeapGcObjectHeader", !17, i64 0, !18, i64 1}
!17 = !{!"_ZTS14HeapEntityType", !8, i64 0}
!18 = !{!"_ZTS11GcCellState", !8, i64 0}
!19 = !{!"bool", !8, i64 0}
!20 = !{!21, !21, i64 0}
!21 = !{!"long", !8, i64 0}
